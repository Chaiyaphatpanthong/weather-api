const axios = require('axios');
const express = require('express');
const cors = require('cors');
const app = express();

const port = process.env.PORT || 8080;
const API_KEY = "9351d1c3e74972058acb0ec6611c40eb";

app.use(cors());

app.get('/', (req, res) => {
    res.send('ЁЯМдя╕П API р╕Юр╕вр╕▓р╕Бр╕гр╕Ур╣Мр╕нр╕▓р╕Бр╕▓р╕ир╕Юр╕гр╣Йр╕нр╕бр╣Гр╕Кр╣Йр╕Зр╕▓р╕Щ! р╣Гр╕Кр╣Й /weather?cities=Chiang Mai,Bangkok,Phuket');
});

// р╕Яр╕▒р╕Зр╕Бр╣Мр╕Кр╕▒р╕Щр╕Фр╕╢р╕Зр╕Вр╣Йр╕нр╕бр╕╣р╕ер╕Юр╕вр╕▓р╕Бр╕гр╕Ур╣Мр╕нр╕▓р╕Бр╕▓р╕ир╕Вр╕нр╕Зр╣Ар╕бр╕╖р╕нр╕Зр╣Ар╕Фр╕╡р╕вр╕з
async function fetchWeather(city) {
    try {
        const weatherResponse = await axios.get(`https://api.openweathermap.org/data/2.5/weather`, {
            params: {
                q: city,
                appid: API_KEY,
                units: "metric",
                lang: "th"
            }
        });
        const lat = weatherResponse.data.coord.lat;
        const lon = weatherResponse.data.coord.lon;

        // р╕Фр╕╢р╕Зр╕Вр╣Йр╕нр╕бр╕╣р╕ер╕Др╕╕р╕Ур╕ар╕▓р╕Юр╕нр╕▓р╕Бр╕▓р╕и (р╕Эр╕╕р╣Ир╕Щ) р╕Фр╣Йр╕зр╕в Air Pollution API
        const airQualityResponse = await axios.get(`https://api.openweathermap.org/data/2.5/air_pollution`, {
            params: {
                lat: lat,
                lon: lon,
                appid: API_KEY
            }
        });

        // р╕Хр╕гр╕зр╕Ир╕кр╕нр╕Ър╕Др╣Ир╕▓р╕Эр╕╕р╣Ир╕Щр╕Бр╣Ир╕нр╕Щр╕кр╣Ир╕Зр╕Бр╕ер╕▒р╕Ъ
        const airQuality = airQualityResponse.data.list[0] ? airQualityResponse.data.list[0].components : {};

        console.log(`тЬЕ [SUCCESS] р╕Фр╕╢р╕Зр╕Вр╣Йр╕нр╕бр╕╣р╕ер╕кр╕│р╣Ар╕гр╣Зр╕Ир╕кр╕│р╕лр╕гр╕▒р╕Ъ: ${city}`);

        // р╕гр╕зр╕бр╕Вр╣Йр╕нр╕бр╕╣р╕ер╕кр╕ар╕▓р╕Юр╕нр╕▓р╕Бр╕▓р╕ир╣Бр╕ер╕░р╕Др╣Ир╕▓р╕Эр╕╕р╣Ир╕Щ
        return {
            city,
            weather: weatherResponse.data,
            airQuality: airQuality // р╕кр╣Ир╕Зр╕Вр╣Йр╕нр╕бр╕╣р╕ер╕Эр╕╕р╣Ир╕Щр╕Чр╕╡р╣Ир╕Хр╕гр╕зр╕Ир╕кр╕нр╕Ър╣Бр╕ер╣Йр╕з
        };

    } catch (error) {
        console.error(`тЭМ [ERROR] р╕Фр╕╢р╕Зр╕Вр╣Йр╕нр╕бр╕╣р╕ер╕ер╣Йр╕бр╣Ар╕лр╕ер╕зр╕кр╕│р╕лр╕гр╕▒р╕Ъ ${city}: ${error.message}`);
        return { city, error: "р╣Др╕бр╣Ир╕кр╕▓р╕бр╕▓р╕гр╕Цр╕Фр╕╢р╕Зр╕Вр╣Йр╕нр╕бр╕╣р╕ер╕Юр╕вр╕▓р╕Бр╕гр╕Ур╣Мр╕нр╕▓р╕Бр╕▓р╕ир╣Бр╕ер╕░р╕Эр╕╕р╣Ир╕Щр╣Др╕Фр╣Й" };
    }
}

// ЁЯФ╣ Route `/weather?cities=Chiang Mai,Bangkok,Phuket`
app.get('/weather', async (req, res) => {
    if (!req.query.cities) {
        return res.status(400).json({ error: "р╕Бр╕гр╕╕р╕Ур╕▓р╕гр╕░р╕Ър╕╕р╕Др╣Ир╕▓р╕Юр╕▓р╕гр╕▓р╕бр╕┤р╣Ар╕Хр╕нр╕гр╣М cities р╣Ар╕Кр╣Ир╕Щ /weather?cities=Chiang Mai,Bangkok,Phuket" });
    }

    const cities = req.query.cities.split(',');
    console.log(`ЁЯУМ [REQUEST] р╕гр╕▒р╕Ър╕Др╕│р╕Вр╕нр╕Юр╕вр╕▓р╕Бр╕гр╕Ур╣Мр╕нр╕▓р╕Бр╕▓р╕ир╣Бр╕ер╕░р╕Эр╕╕р╣Ир╕Щр╕кр╕│р╕лр╕гр╕▒р╕Ъ: ${cities.join(', ')}`);

    const weatherPromises = cities.map(fetchWeather);
    const weatherData = await Promise.all(weatherPromises);

    console.log("ЁЯУж [RESPONSE] р╕кр╣Ир╕Зр╕Вр╣Йр╕нр╕бр╕╣р╕е JSON р╕Бр╕ер╕▒р╕Ър╣Др╕Ыр╕вр╕▒р╕Зр╕ер╕╣р╕Бр╕Др╣Йр╕▓");
    res.json(weatherData);
});

// ЁЯФ╣ р╣Ар╕гр╕┤р╣Ир╕бр╣Ар╕Лр╕┤р╕гр╣Мр╕Яр╣Ар╕зр╕нр╕гр╣М
app.listen(port, () => {
    console.log(`ЁЯМО [SERVER] р╕Бр╕│р╕ер╕▒р╕Зр╕Чр╕│р╕Зр╕▓р╕Щр╕Ър╕Щр╕Юр╕нр╕гр╣Мр╕Х ${port}`);
});
